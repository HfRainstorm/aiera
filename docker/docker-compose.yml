# Compose a postgres database together with the extension pgvector
services:
#  pgvector:
#    image: docker.m.daocloud.io/pgvector/pgvector:0.7.2-pg16
#    ports:
#      - 5432:5432
#    restart: always
#    environment:
#      - POSTGRES_DB=aiera
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    volumes:
#      - ../data/pgdata:/var/lib/postgresql/data

  # redis
  aiera-redis:
    image: redis:latest
    container_name: aiera-redis-server
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=123456
    volumes:
      - ../data/redis_data:/data
    command: "redis-server --bind 0.0.0.0 --appendonly yes --requirepass 123456"
    restart: always
    networks:
      - aiera-docker

  aiera-nacos:
    image: nacos/nacos-server:v2.5.0
    container_name: aiera-nacos-standalone-mysql
    volumes:
      - ./standalone-logs/:/home/nacos/logs
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=aiera-mysql
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=root
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      - MYSQL_DATABASE_NUM=1
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    networks:
      - aiera-docker
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      aiera-mysql:
        condition: service_healthy
    restart: always

  aiera-mysql:
    image: mysql:8.0
    container_name: aiera-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - aiera-docker

  # milvus
  aiera-etcd:
    container_name: aiera-milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ../data/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3
  aiera-minio:
    container_name: aiera-milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ../data/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  aiera-standalone:
    container_name: aiera-milvus-standalone
    image: milvusdb/milvus:v2.4.15
    command: [ "milvus", "run", "standalone" ]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: aiera-etcd:2379
      MINIO_ADDRESS: aiera-minio:9000
    volumes:
      - ../data/milvus:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "aiera-etcd"
      - "aiera-minio"

networks:
  aiera-docker:
    driver: bridge
    external: false
  default:
    name: milvus
